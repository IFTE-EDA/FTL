#image: carlonluca/qt-dev:6.0.4
image: 
  name: arnoldnico/ifte-ci:py3.10.4-vedo-bookworm
#  name: arnoldnico/ifte-ci:py3.10.4-vedo-bullseye
  entrypoint: [ '/bin/bash', '-s' ]
 

 
stages:          # List of stages for jobs, and their order of execution
  - hi
  - test
  - bye

before_script:
  - python --version
  - pip --version
  - which python3
  - which pip3
  - gpgconf --version
  - gpg-connect-agent --version
  - dirmngr --version
  #- apt-get --allow-unauthenticated --allow-insecure-repositories clean && apt-get --allow-unauthenticated --allow-insecure-repositories update
  #- apt-get install -y ffmpeg x264 libsm6 libxext6 libglib2.0-0 qt6-base-dev libqt6core6 #mlocate python3-pyqt6
  - git submodule update --remote
  #- strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt6Core.so.6
  #- python3 -m pip install -i https://gmsh.info/python-packages-dev --force-reinstall --no-cache-dir gmsh
  #- add-apt-repository ppa:deadsnakes/ppa
  - python3 -m pip install --progress-bar off --ignore-installed -r requirements.txt
  - python3 -m pip install --progress-bar off --ignore-installed -U pytest tox
  - git clone https://github.com/pyenv/pyenv.git /opt/pyenv
  - pwd
  - cd /opt/pyenv && src/configure && make -C src && cd -
  - pwd
  - ls -l /opt/pyenv
  - export PATH="/opt/pyenv/bin:$PATH"
  - export PYENV_ROOT = /opt/pyenv
  - apt-get update && apt-get install libssl-dev openssl libffi-dev
  - pyenv install 3.5.3 3.6.8
  - pyenv local 3.5.3 3.6.8
  - pyenv global 3.5.3 3.6.8
  #- apt-get install python3.5 python3.6
  #- wget https://www.python.org/ftp/python/3.5.10/Python-3.5.10.tgz
  #- tar zxf Python-3.5.10.tgz
  #- cd Python-3.5.10/
  #- ./configure --prefix=/usr/local
  #- make
  #- make install
  #- ln -fs /opt/python-3.5.2/bin/python3.5 /usr/local/bin/python3.5
  #- ln -fs /opt/python-3.5.2/bin/pip3.5 /usr/local/bin/pip3.5
  #- cd ..
  #- python3.5 --version
  - which python3.5
  - which python3
  - pyenv versions
  #- locate libQt6Core.so.6

hello:
  stage: hi
  script:
    - echo Hello

test_pytest:
  stage: test
  script:
    - pytest tests/
#  artifacts:
#    when: always
#    reports:
#      junit: report.xml

test_tox:
  stage: test
  script:
    - tox

goodbye:
  stage: bye
  script:
    - echo Goodbye