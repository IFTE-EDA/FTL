[tox]
min_version = 4.0
envlist = 	
			#py37
			#py38
			py39
			py310
			py311
			#coverage
			#docs
allowlist_externals =*
isolated_build = True
skip_missing_interpreters = false
skipsdist = false

[testenv]
allowlist_externals =*
description = run pytest under {basepython}
commands = 	python --version
			echo -e "\e[0Ksection_start:`date +%s`:sct_piplist[collapsed=true]\r\e[0Kinstalled pip packages"
			pip list
			echo -e "\e[0Ksection_end:`date +%s`:sct_piplist\r\e[0K"
			pip install -r requirements.txt pytest-cov
			pip install .
			pytest tests --junitxml=junit-{envname}.xml --junit-prefix={envname} --cov=. --cov-report term --cov-report xml:coverage.xml
			#--cov=. --cov-config "tox.ini" --cov-report term --cov-report xml:coverage.xml 
			#--cov "{envsitepackagesdir}/tox" \
			#--cov-config "{toxinidir}/tox.ini" \
			#--junitxml {toxworkdir}/junit.{envname}.xml \
			#{posargs:.}

[testenv:flake8]
allowlist_externals =*
#commands =  flake8 $(git status -s | grep -E '\.py$' | cut -c 4-) {posargs}
commands =  flake8

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    coverage>=6.4.4
parallel_show_output = true
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
depends = py37, py38, py39, py310, py311

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.10
extras =
    docs
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W --keep-going -n -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
	
[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = FTL/tox
    */.tox/*/lib/python*/site-packages/tox
    */.tox/pypy*/site-packages/tox
    */.tox\*\Lib\site-packages\tox
    */FTL/tox
    *\FTL\tox